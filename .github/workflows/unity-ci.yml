name: C# Build Check on PR

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Build C# Projects
        id: build
        shell: pwsh
        run: |
          $errors = @()
          $failed = $false

          Get-ChildItem -Recurse -Filter *.csproj | ForEach-Object {
            $output = dotnet build $_.FullName --nologo --no-restore 2>&1
            if ($LASTEXITCODE -ne 0) {
              $failed = $true
              $output | Where-Object { $_ -match 'error' } | Select-Object -First 10 | ForEach-Object {
                $line = ($_ -replace '\s+', ' ').Trim()
                $errors += $line
              }
            }
          }

          if ($failed) {
            echo "BUILD_FAILED=true" >> $env:GITHUB_ENV
            $errorsText = $errors -join "`n"
            $errorsText | Out-File -FilePath errors.txt -Encoding utf8
          } else {
            echo "BUILD_FAILED=false" >> $env:GITHUB_ENV
          }

      - name: Comment on PR
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          $pr = "${{ github.event.pull_request.number }}"
          if ("${{ env.BUILD_FAILED }}" -eq "true") {
            $errors = Get-Content errors.txt -Raw
            gh pr comment $pr -b "❌ C# build failed. Please fix errors before merging:`n```\n$errors\n```"
          } else {
            gh pr comment $pr -b "✅ C# build succeeded."
          }
